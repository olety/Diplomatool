# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-03 01:41
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import site_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('index_number', models.CharField(default='000001', max_length=10, verbose_name='index number')),
                ('first_name', models.CharField(blank=True, default='Name', max_length=255, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, default='Surname', max_length=255, null=True, verbose_name='last name')),
                ('degree', models.CharField(blank=True, choices=[('Bachelor', 'Bachelor'), ('Master', 'Master'), ('Doctor', 'Doctor')], default='Bachelor', max_length=50, null=True, verbose_name='degree')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('department', models.CharField(blank=True, max_length=4, null=True, verbose_name='user department')),
                ('is_admin', models.BooleanField(default=False, verbose_name='is admin')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Defense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='defense date')),
                ('successful', models.BooleanField(verbose_name='successful')),
                ('second_defense', models.BooleanField(verbose_name='second defense required')),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, verbose_name='faculty code')),
                ('name', models.CharField(max_length=255, verbose_name='faculty name')),
            ],
            options={
                'verbose_name': 'faculty',
                'verbose_name_plural': 'faculties',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finished_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='finished date')),
                ('file', models.FileField(blank=True, null=True, upload_to=site_app.models.Review.get_file_path, verbose_name='review file')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_author', to=settings.AUTH_USER_MODEL, verbose_name='review author')),
            ],
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finished', models.BooleanField(verbose_name='finished')),
                ('finished_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='finished date')),
                ('file', models.FileField(blank=True, null=True, upload_to=site_app.models.Thesis.get_file_path, verbose_name='thesis file')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL, verbose_name='student')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervisor', to=settings.AUTH_USER_MODEL, verbose_name='supervisor')),
            ],
            options={
                'verbose_name': 'thesis',
                'verbose_name_plural': 'theses',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='topic')),
                ('level', models.CharField(blank=True, choices=[('Bachelor', 'Bachelor'), ('Master', 'Master'), ('Doctor', 'Doctor')], default='Bachelor', max_length=255, null=True, verbose_name='level')),
                ('voted_for', models.NullBooleanField(default=False, verbose_name='voted for')),
                ('available', models.NullBooleanField(default=False, verbose_name='available')),
                ('checked', models.NullBooleanField(default=False, verbose_name='checked')),
                ('short_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='short description')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_owner', to=settings.AUTH_USER_MODEL, verbose_name='topic owner')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_supervisor', to=settings.AUTH_USER_MODEL, verbose_name='topic supervisor')),
            ],
        ),
        migrations.AddField(
            model_name='thesis',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thesis_topic', to='site_app.Topic', verbose_name='thesis topic'),
        ),
        migrations.AddField(
            model_name='review',
            name='thesis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewed_thesis', to='site_app.Thesis', verbose_name='reviewed thesis'),
        ),
        migrations.AddField(
            model_name='defense',
            name='thesis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defended_thesis', to='site_app.Thesis', verbose_name='defended thesis'),
        ),
        migrations.AddField(
            model_name='user',
            name='faculty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='site_app.Faculty', verbose_name='user faculty'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
